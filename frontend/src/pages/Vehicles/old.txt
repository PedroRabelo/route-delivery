<div className="flex mt-4 gap-4">
            {vehicleZones && vehicleZones.length > 0 && vehicleZones.map((zone) =>
              <div>
                <span
                  key={zone.zonaId}
                  className="inline-flex items-center rounded-full bg-indigo-100 py-0.5 pl-2.5 pr-1 text-lg font-medium text-indigo-700">
                  {zone.prioridade} - {zone.zona}
                  {/* <button
                  type="button"
                  className="ml-0.5 inline-flex h-4 w-4 flex-shrink-0 items-center justify-center rounded-full text-indigo-400 hover:bg-indigo-200 hover:text-indigo-500 focus:bg-indigo-500 focus:text-white focus:outline-none"
                  onClick={() => handleRemoveZone(zone.id)}
                >
                  <span className="sr-only">Remove Zone</span>
                  <svg className="h-2 w-2" stroke="currentColor" fill="none" viewBox="0 0 8 8">
                    <path strokeLinecap="round" strokeWidth="1.5" d="M1 1l6 6m0-6L1 7" />
                  </svg>
                </button> */}
                </span>
                <Button
                  title="Editar Prioridade"
                  color="primary"
                  type="button"
                  onClick={() => handleEditPriority()}
                  Icon={PencilSquareIcon}
                />
                <Button
                  title="Editar Prioridade"
                  color="secondary"
                  type="button"
                  onClick={() => handleRemoveZone(zone.zonaId)}
                  Icon={TrashIcon}
                />
              </div>
            )}
          </div>